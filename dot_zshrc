# zmodload zsh/zprof

### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi
source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit's installer chunk

export DEFAULT_USER="jake"
export EDITOR="code --wait"
export KUBE_EDITOR="code --wait"
export PROJECT_HOME=$HOME/Development
export GOPATH=$HOME/Development/go
export POETRY_VIRTUALENVS_IN_PROJECT=true

export PATH="$PATH:/usr/local/opt/coreutils/libexec/gnubin"
export PATH="$PATH:$GOPATH/bin"
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PATH="/Users/$DEFAULT_USER/.pyenv/shims:${PATH}"
export PATH="$PATH:$HOME/Development/bin"

zinit ice depth=1; zinit light romkatv/powerlevel10k

zinit wait lucid light-mode depth=1 for \
  OMZP::direnv \
  atload"unalias j; alias j=z" \
    OMZP::fasd \
  OMZP::aws \
  OMZP::fzf \
  OMZP::git \
  OMZP::pyenv \
  OMZP::yarn \
  as"completion" \
    OMZP::cargo/_cargo \
  as"completion" \
    OMZP::rust/_rust \
  as"completion" \
    OMZP::docker/_docker \
  as"completion" \
    OMZP::docker-compose/_docker-compose \
  atload'zstyle ":completion:*" special-dirs false' \
    OMZL::completion.zsh \
  zdharma/fast-syntax-highlighting \
  atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions \
  atload"zicompinit; zicdreplay" blockf \
    zsh-users/zsh-completions

# iterm2 integration
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
# zinit ice wait'1' lucid id-as'iterm'; zinit snippet "${HOME}/.iterm2_shell_integration.zsh"

export AWS_VAULT_KEYCHAIN_NAME=login
export AWS_VAULT_PROMPT=osascript
export AWS_SESSION_TOKEN_TTL=4h
export AWS_ASSUME_ROLE_TTL=4h
export BAT_PAGER='never'
export BAT_THEME='TwoDark'
export FZF_DEFAULT_COMMAND='fd --type f'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type d"
export FZFZ_RECENT_DIRS_TOOL='fasd'
export FZFZ_EXTRA_DIRS="~/Development"
export GIT_PAGER='delta'
export PIPENV_VENV_IN_PROJECT=1
export LESS='-F -g -i -M -R -S -w -z-4'
export TIMEFMT='%J:   %U user  -  %S system  -  %P cpu  -  %*E total'$'\n'\
'avg shared (code):         %X KB'$'\n'\
'avg unshared (data/stack): %D KB'$'\n'\
'total (sum):               %K KB'$'\n'\
'max memory:                %M KB'$'\n'\
'vol cont switches:         %w'$'\n'\
'invol cont switches:       %c'$'\n'\
'page faults from disk:     %F'$'\n'\
'other page faults:         %R'
export CURLFMT='     time_namelookup:  %{time_namelookup}s\n'\
'        time_connect:  %{time_connect}s\n'\
'     time_appconnect:  %{time_appconnect}s\n'\
'    time_pretransfer:  %{time_pretransfer}s\n'\
'       time_redirect:  %{time_redirect}s\n'\
'  time_starttransfer:  %{time_starttransfer}s\n'\
'                     ----------\n'\
'          time_total:  %{time_total}s\n'

alias ..='cd ..'
alias ...='cd ../..'
alias ~='cd ~'
alias btm='btm -a -f'
alias cloc2='tokei'
alias curltime="curl -w \"$CURLFMT\" -o /dev/null -s "
alias dc='docker-compose'
alias dnsflush='dscacheutil -flushcache; sudo killall -HUP mDNSResponder'
alias dockerkill='docker kill $(docker ps -q) || true'
alias dockerprune='docker system prune -f'
alias g='git'
alias ga='git add'
alias gaa='git add --all'
alias gb='git branch'
alias gc='git commit -v'
alias gcd='git checkout develop'
alias gco='git checkout'
alias gd='git diff'
alias gf='git fetch'
alias gl='git pull'
alias gp='git push'
alias grm='git rm'
alias gst='git status'
alias help='tldr'
alias hosts='code /etc/hosts'
# alias j='z' # see fasd plugin above
alias k='kubectl'
alias kiali='open https://localhost:20001 && kubectl port-forward -n istio-system svc/kiali 20001:20001'
alias l='exa --git --time-style long-iso -lah'
alias lh='exa --git --time-style long-iso -lh'
alias li='colorls -lA'
alias micro='TERM=xterm-256color micro'
alias ncdu='ncdu --color dark -rr -x --exclude .git --exclude node_modules'
alias ping='prettyping'
alias vhalt='vagrant halt'
alias vssh='vagrant ssh'
alias vussh='vagrant up && vagrant ssh'
alias watch='watch --color '
alias weavescope='open http://localhost:4040 && kubectl port-forward -n weave "$(kubectl get -n weave pod --selector=weave-scope-component=app -o jsonpath="{.items..metadata.name}")" 4040'
alias yys='yarn && yarn start'
alias zconf='chezmoi edit .zshrc'

function fdiff {
  git diff --no-index --color $1 $2 | diff-so-fancy
}

iterm2_print_user_vars() {
  # iterm2_set_user_var kube-cluster $(kubectx -c)
  # iterm2_set_user_var kube-ns $(kubens -c)
}

bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word
bindkey "^[[H"    beginning-of-line
bindkey "^[[F"    end-of-line
bindkey '^[[Z'    reverse-menu-complete

ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=101"

HISTFILE=~/.zsh_history
HISTSIZE=20000
SAVEHIST=20000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ':start:elapsed;command' format.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire a duplicate event first when trimming history.
setopt HIST_IGNORE_DUPS          # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete an old recorded event if a new event is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a previously found event.
setopt HIST_IGNORE_SPACE         # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS         # Do not write a duplicate event to the history file.
setopt HIST_VERIFY               # Do not execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing non-existent history.

setopt COMPLETE_IN_WORD    # Complete from both ends of a word.
setopt ALWAYS_TO_END       # Move cursor to the end of a completed word.
setopt PATH_DIRS           # Perform path search even on command names with slashes.
setopt AUTO_MENU           # Show completion menu on a successive tab press.
setopt AUTO_LIST           # Automatically list choices on ambiguous completion.
setopt AUTO_PARAM_SLASH    # If completed parameter is a directory, add a trailing slash.
setopt EXTENDED_GLOB       # Needed for file modification glob modifiers with compinit
unsetopt MENU_COMPLETE     # Do not autoselect the first completion entry.
unsetopt FLOW_CONTROL      # Disable start/stop characters in shell editor.
unsetopt CASE_GLOB
zstyle ':completion::complete:*' use-cache on
zstyle ':completion::complete:*' cache-path "$HOME/.zcompcache"
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
# Group matches and describe.
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'
zstyle ':completion:*:corrections' format ' %F{green}-- %d (errors: %e) --%f'
zstyle ':completion:*:descriptions' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'
zstyle ':completion:*:default' list-prompt '%S%M matches%s'
zstyle ':completion:*' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose yes
# Fuzzy match mistyped completions.
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric
# Directories
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:*:cd:*' tag-order local-directories directory-stack path-directories
zstyle ':completion:*:*:cd:*:directory-stack' menu yes select
zstyle ':completion:*:-tilde-:*' group-order 'named-directories' 'path-directories' 'users' 'expand'
zstyle ':completion:*' squeeze-slashes true
# History
zstyle ':completion:*:history-words' stop yes
zstyle ':completion:*:history-words' remove-all-dups yes
zstyle ':completion:*:history-words' list false
zstyle ':completion:*:history-words' menu yes
# Environment Variables
zstyle ':completion::*:(-command-|export):*' fake-parameters ${${${_comps[(I)-value-*]#*,}%%,*}:#-*-}

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# zprof
